####since Java 7, we have an Objects.hash() utility method for comfortable hashing

* Object.hashCode(): use to get the hashcode of a single, non-null object. If null then it throws NullPointerException
* Objects.hashCode(): use to get the hashcode of a single object that might be null. If null then it returns zero
* Objects.hash(): use to get a hashcode for multiple objects. 
  > return Objects.hash(firstName, lastName, position);

old style:
--------------
//Eclipse produces this one:
@Override
public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((email == null) ? 0 : email.hashCode());
    result = prime * result + (int) (id ^ (id >>> 32));
    result = prime * result + ((name == null) ? 0 : name.hashCode());
    return result;
}

//IntelliJ IDEA generates the following implementation:
@Override
public int hashCode() {
    int result = (int) (id ^ (id >>> 32));
    result = 31 * result + name.hashCode();
    result = 31 * result + email.hashCode();
    return result;
}

Equals()
-------------
public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null) return false;
        if (this.getClass() != o.getClass()) return false;
        User user = (User) o;
        return id == user.id 
          && (name.equals(user.name) 
          && email.equals(user.email));
    }
